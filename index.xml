<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jack</title>
    <link>http://whoisjack.today/index.xml</link>
    <description>Recent content on Jack</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 24 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://whoisjack.today/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>RTFM</title>
      <link>http://whoisjack.today/blog/2017-01-24-RTFM/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://whoisjack.today/blog/2017-01-24-RTFM/</guid>
      <description>&lt;p&gt;I thought this would be a story about finding a flaw in the great google machine - instead it&amp;rsquo;s about being prudent when working with dependencies.
&lt;/p&gt;

&lt;p&gt;I am currently working on an app for Kenyan users. With SMS functionality, we have validation for local phone numbers. While we were testing, I realized that my number is considered invalid by google&amp;rsquo;s &lt;a href=&#34;https://github.com/googlei18n/libphonenumber&#34;&gt;libphonenumber&lt;/a&gt; library. It has a 254798 prefix presumably newly introduced as I had picked up my SIM at the airport days earlier.&lt;/p&gt;

&lt;p&gt;I check the library and searched for &amp;ldquo;kenya&amp;rdquo;. After a quick scan, a comment stands out: &amp;ldquo;Prefix 25476 added for Airtel Kenya based on open-source bug report.&amp;rdquo; Followed by &amp;ldquo;other prefixes from Wikipedia.&amp;rdquo; I take a look and Wikipedia does not contain a prefix for my number. Everything made sense. There&amp;rsquo;s no way google has the resources to keep up with all the technical changes in the world - and certainly not the developing areas where documentation is poor and good practice is as well respected as traffic regulations.&lt;/p&gt;

&lt;p&gt;Excitedly, I thought I would get to file a bug report against a google repository. Nervously, I realized we&amp;rsquo;d have to roll our own phone number validation to release on schedule. So I hammer out a horrific switch case method and throw it in.
But as I go to file the report, I read the issue guidelines, which includes this step: &amp;ldquo;Is the issue reproducible using the demo?,&amp;rdquo; and this step: &amp;ldquo;Your issue may be resolved by upgrading to the latest version of the library.&amp;rdquo; Mmmmmm. I try my number in the online demo. It works. I go back to the code file. Appended at the very end of file: &amp;ldquo;25479|Safaricom.&amp;rdquo; Sure enough, searching the issues gives &lt;a href=&#34;https://github.com/googlei18n/libphonenumber/issues/804&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I rollback and just update the library. Maybe I should submit a change to Wikipedia.
So even if you&amp;rsquo;re using a library for a volatile domain - give them the benefit of the doubt and first RTFM.
An argument can also be made that in a domain &lt;em&gt;this&lt;/em&gt; volatile, it could be wise to use a less strict form of validation in the first place, depending on the business value of the feature always working vs. the consequences of allowing an illegal value.&lt;/p&gt;

&lt;p&gt;Bonus: &lt;a href=&#34;https://www.facebook.com/SafaricomLtd/posts/10156369539590084&#34;&gt;FB&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/safaricomltd/status/633134928536932352&#34;&gt;twitter&lt;/a&gt; as technical communication channels&lt;/p&gt;

&lt;p&gt;At least they&amp;rsquo;re responsive!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Arimaa Free</title>
      <link>http://whoisjack.today/projects/arimaa-free/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://whoisjack.today/projects/arimaa-free/</guid>
      <description>&lt;div class=&#34;image-set&#34;&gt;
    &lt;img src=&#34;http://whoisjack.today/assets/projects/arimaa-screen-1.png&#34;&gt;
    &lt;img src=&#34;http://whoisjack.today/assets/projects/arimaa-screen-2.png&#34;&gt;
&lt;/div&gt;

&lt;div class=&#34;centered&#34;&gt;
    &lt;a class=&#34;button&#34; href=&#34;http://play.google.com/store/apps/details?id=email.com.gmail.songjiapei.arimaa&amp;hl=en&#34;&gt;
        &lt;i class=&#34;ion-android-playstore&#34;&gt;&lt;/i&gt;Play Store
    &lt;/a&gt; &lt;a class=&#34;button end&#34; href=&#34;http://github.com/jack-song/Arimaa&#34;&gt;
        &lt;i class=&#34;ion-social-github&#34;&gt;&lt;/i&gt;Github
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Interestingly, a game designed to be difficult for computers to play. But AI players have very recently beaten humans! &lt;a href=&#34;http://arimaa.com/arimaa/&#34;&gt;The original Arimaa can be found here.&lt;/a&gt; (warning: not a modern website)&lt;/p&gt;

&lt;p&gt;It was fun to design a system for rewinding and replaying games move by move. I ended up using a string serialization for recording actions based on the &lt;a href=&#34;http://arimaa.com/arimaa/learn/notation.html&#34;&gt;standard notation&lt;/a&gt;. Despite being intimidating, it was also fun to generate the recursive set of legal moves for the UI. Not too proud of the &amp;ldquo;GameEngine&amp;rdquo; class though&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Colorful Conway</title>
      <link>http://whoisjack.today/projects/conway/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://whoisjack.today/projects/conway/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://whoisjack.today/assets/projects/conway-blurb.png&#34; alt=&#34;Colorful Conway&#34; /&gt;&lt;/p&gt;

&lt;div class=&#34;centered&#34;&gt;
    &lt;a class=&#34;button&#34; href=&#34;http://colorfulconway-songjack.rhcloud.com/&#34;&gt;
        &lt;i class=&#34;ion-android-globe&#34;&gt;&lt;/i&gt;Try it live
    &lt;/a&gt; &lt;a class=&#34;button end&#34; href=&#34;https://github.com/jack-song/colorfulConway&#34;&gt;
        &lt;i class=&#34;ion-social-github&#34;&gt;&lt;/i&gt;Github
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Different clients are given different colours on a standard Game of Life board. The simulation runs as usual - except new cells are generated as an average colour of the cells around it.&lt;/p&gt;

&lt;p&gt;It was interesting to have to deal with the realities of network latency and a relatively inefficient computation. Signficant compromises had to be made to the original design. Simulations are round based rather than constantly running to allow the server to synchronize clients. Simulations also run slower to improve consistency between clients with varying computing power.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Morbid Motivation</title>
      <link>http://whoisjack.today/projects/morbid/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://whoisjack.today/projects/morbid/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://whoisjack.today/assets/projects/morbid-blurb.png&#34; alt=&#34;Morbid Motivation&#34; /&gt;&lt;/p&gt;

&lt;div class=&#34;centered&#34;&gt;
    &lt;a class=&#34;button&#34; href=&#34;http://chrome.google.com/webstore/detail/morbid-motivation/kjpeibokdagajocicdijpeognkpccphj&#34;&gt;
        &lt;i class=&#34;ion-android-globe&#34;&gt;&lt;/i&gt;Chrome Store
    &lt;/a&gt; &lt;a class=&#34;button end&#34; href=&#34;http://github.com/jack-song/MorbidMotivation&#34;&gt;
        &lt;i class=&#34;ion-social-github&#34;&gt;&lt;/i&gt;Github
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The idea is to use our inevitable passing as a source of motivation. Colours are configurable to the user&amp;rsquo;s tastes.&lt;/p&gt;

&lt;p&gt;A fairly simple app made in a few hours for a short hackathon. An early attempt to learn ways of modularizing javascript code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>