<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on J A C K</title>
    <link>/categories/code/</link>
    <description>Recent content in code on J A C K</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shipping as a habit</title>
      <link>/blog/2022-01-17-public-notes/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-01-17-public-notes/</guid>
      <description>I&amp;rsquo;ve worked on a lot of projects (3d printing, grooming habits, video calling), but don&amp;rsquo;t publish enough. I don&amp;rsquo;t do the last 5%, I don&amp;rsquo;t risk it for the biscuit, and I don&amp;rsquo;t get feedback. The only reliable way to build behavior is through habits. Shipping is certainly a behavior. The answer then, is to make shipping a habit.
I&amp;rsquo;ll commit to publishing a small thing every day, even if it&amp;rsquo;s a working note or reflection.</description>
    </item>
    
    <item>
      <title>Building a Processing Pipeline - final architecture</title>
      <link>/blog/2017-06-02-data-pipeline-3/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017-06-02-data-pipeline-3/</guid>
      <description>part 2
Configuration, security, and deployment with SQS were all as easy as expected, and IAM has been a great convenience. It was also pretty straight forward to write tasks for Celery - but successes are not interesting.
Celery does not play perfectly with SQS.
One source of struggle was having scheduled tasks, thanks to SQS limitations (mostly relating to timeouts). We were forced to use local scheduling solutions for timed output delivery - in this case, Advanced Python Scheduler.</description>
    </item>
    
    <item>
      <title>Browser Game - SunShower</title>
      <link>/blog/project-sunshower/</link>
      <pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/project-sunshower/</guid>
      <description>Play it!
Github
Pet project based on an idea I had for a simple, challenging game with a high skill ceiling. It&amp;rsquo;s basically Tetris 360. Original intention was to learn more about using a game framework and marketing.
Turns out I&amp;rsquo;m also learning a lot about game design, user feedback management, and Google Analytics. There are definitely still improvements (like row elimination animations) to be made and more marketing (like a dedicated domain) to be done.</description>
    </item>
    
    <item>
      <title>Building a Processing Pipeline - Amazon AWS SQS vs RabbitMQ benchmarks</title>
      <link>/blog/2017-04-21-data-pipeline-2/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017-04-21-data-pipeline-2/</guid>
      <description>part 1
Our data pipeline needs a message broker for a Celery job queue; RabbitMQ and Amazon SQS are two good choices. They are designed to scale, guarantee message delivery, and seem to have good support.
RabbitMQ has a solid reputation as a broker, with diverse and robust features. It works very well with Celery. The only real disadvantage is that it relies on custom configuration and deployment. SQS is a message queue as a service, self-scaling and configurable from a web UI.</description>
    </item>
    
    <item>
      <title>Processing Pipeline - Requirements and architecture</title>
      <link>/blog/2017-04-20-data-pipeline-1/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017-04-20-data-pipeline-1/</guid>
      <description>At my work, we&amp;rsquo;re building a pipeline to provide data-driven feedback to users.
The de-facto king for data is Python, thanks to its community. A common way to deploy these models is via a Flask application, but this isn&amp;rsquo;t a good fit for every case. What if the service doesn&amp;rsquo;t need a front end? What if clients don&amp;rsquo;t want to wait for a potentially long operation? What if our business requirements are still uncertain, and we anticipate a need to scale?</description>
    </item>
    
    <item>
      <title>Alexa Skill - Daily Wiki</title>
      <link>/blog/project-wiki-daily/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/project-wiki-daily/</guid>
      <description>Amazon
Github
Yes I did it for the free Alexa dev sweater.
No I haven&amp;rsquo;t retrieved my sweater yet. The ratings are pretty bad. People want the entire featured article read out to them. Maybe I&amp;rsquo;ll add that if I get the time. Feel free to make a pull request!
Fun to play with Node on AWS Lambda. Also learned about YQL queries, which seem pretty useful for web scraping.</description>
    </item>
    
    <item>
      <title>Neural Net Powered Chrome Ext. - Page Predictor</title>
      <link>/blog/project-page-predictor/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/project-page-predictor/</guid>
      <description>Github
A chrome extension that predicts what website you&amp;rsquo;re going to &amp;mdash; so you don&amp;rsquo;t even have to type it in!
Our team&amp;rsquo;s base assumption is that we visit some websites in certain patterns, and a neural net might be able to pick up on them. Learning about normalizing data, recurrent neural networks and tweaking them. Admittedly, test results so far have been quite poor and we will probably try some different training methods or ways of preprocessing/cleaning the history data.</description>
    </item>
    
    <item>
      <title>Social Web App - Pattio (WIP)</title>
      <link>/blog/project-pattio/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/project-pattio/</guid>
      <description>On social media, we don&amp;rsquo;t communicate the way we do in real life. There are different protocols and habits, which can make interactions feel shallow or distracting. We want to make an app that promotes meaningful and spontaneous conversations for close friends and family.
Important features include voice calls, seeing and joining ongoing conversations between friends, allowing guests to join, and less &amp;ldquo;indirect&amp;rdquo; engagement such as statuses and leaving messages. We also want to build a &amp;ldquo;binary indicator&amp;rdquo; culture - availability implies a genuine interest in spending time to chat, rather than ambiguous &amp;ldquo;busy&amp;rdquo; statuses.</description>
    </item>
    
    <item>
      <title>RTFM - software engineering 101</title>
      <link>/blog/2017-01-24-RTFM/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017-01-24-RTFM/</guid>
      <description>I thought I had found a flaw in the great google machine - instead I learned that &amp;ldquo;libraries are innocent until proven guilty&amp;rdquo;.
I am currently working on an app for Kenyan users, with validation for local phone numbers. We use google&amp;rsquo;s libphonenumber library. While testing, I realized that my Kenyan number was considered invalid.
I check the source code and searched for &amp;ldquo;kenya&amp;rdquo;: &amp;ldquo;Prefix 25476 added for Airtel Kenya based on open-source bug report [&amp;hellip;] other prefixes from Wikipedia.</description>
    </item>
    
    <item>
      <title>Android Board Game - Arimaa Free</title>
      <link>/blog/project-arimaa-free/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/project-arimaa-free/</guid>
      <description>Play Store
Github
Open source contributions welcome! I&amp;rsquo;m currently looking for someone to pass on the development torch; there&amp;rsquo;s a lot of interesting work to be done, especially as a beginner/intermediate project. AI bots and online multiplayer! Send an email to jackthesong@gmail.com and I&amp;rsquo;d be glad to set you up/do a walkthrough.
Interestingly, a game designed to be difficult for computers to play. But AI players have very recently beaten humans!</description>
    </item>
    
    <item>
      <title>Chrome Ext. - Morbid Motivation</title>
      <link>/blog/project-morbid/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/project-morbid/</guid>
      <description>Chrome Store
Github
The idea is to use our inevitable passing as a source of motivation. Colours are configurable to the user&amp;rsquo;s tastes.
A fairly simple app made in a few hours for a short hackathon. An early attempt to learn ways of modularizing javascript code.</description>
    </item>
    
    <item>
      <title>Multiplayer Web App - Colorful Conway</title>
      <link>/blog/project-conway/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/project-conway/</guid>
      <description>Try it live
Github
Different clients are given different colours on a standard Game of Life board. The simulation runs as usual - except new cells are generated as an average colour of the cells around it.
It was interesting to have to deal with the realities of network latency and a relatively inefficient computation. Signficant compromises had to be made to the original design. Simulations are round based rather than constantly running to allow the server to synchronize clients.</description>
    </item>
    
  </channel>
</rss>
